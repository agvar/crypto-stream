[api]
api_endpoint = https://api.coincap.io/v2/assets
partition_key=id

[aws]
kinesis_stream=cryptostream
firehose_stream=cryptostream
shard_count = 5
iterator_type =LATEST
region =us-east-2
firehose_role=firehose-kinesis-stream-s3-role
retry_delay_seconds=15
retry_max_attempts=40
cloudwatch_log_group =firehose-delivery-group
cloudwatch_log_stream =firehose-delivery-stream
glue_kinesis_database=kinesis_inbound_database
glue_kinesis_table=kinesis_inbound_table
firehose_s3_bucket=data-analytics-storage-11012024-xyz00exr
firehose_s3_prefix=crypto_input_data
emr_cluster_name=spark-crypto-cluster
assume_role_policy={"Version": "2012-10-17",
	"Statement": [{
		"Sid": "",
		"Effect": "Allow",
		"Principal": {
			"Service": "firehose.amazonaws.com"
		},
		"Action": "sts:AssumeRole"
	}]}
policies= [
    {
      "policy_name": "glue_data_format_policy",
      "policy_description": "glue data format policy",
      "policy_document": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "glue:GetTable",
              "glue:GetTableVersion",
              "glue:GetTableVersions"
            ],
            "Resource":["glue_table_ARN","glue_database_ARN",
            "catalog_ARN"]
          },
          {
            "Sid": "GetSchemaVersion",
            "Effect": "Allow",
            "Action": [
              "glue:GetSchemaVersion"
            ],
            "Resource": ["*"]
          }
        ]
      }
    },
    {
      "policy_name": "kinesis_read_policy",
      "policy_description": "kinesis read policy",
      "policy_document": {"Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "kinesis:DescribeStream",
              "kinesis:GetShardIterator",
              "kinesis:GetRecords",
              "kinesis:GetShardIterator"
            ],
            "Resource": "kinesis_stream_ARN"
          }
        ]
      }
    },
    {
      "policy_name": "s3_read_write_policy",
      "policy_description": "s3 read and write policy",
      "policy_document": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:AbortMultipartUpload",
                "s3:ListBucket",
                "s3:GetBucketLocation",
                "s3:GetObjectTagging"
                ],
            "Resource": "firehose_S3_bucket_ARN/*"
          }
        ]
      }
    },
    {
    "policy_name": "firehose_policy",
      "policy_description": "firehose policy",
      "policy_document": {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "firehose:DeleteDeliveryStream",
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
                "firehose:UpdateDestination"
            ],
            "Resource": [
                "*"
            ]
        }
    ]}},
    {
    "policy_name": "cloudwatch_policy",
      "policy_description": "cloudwatch_policy policy",
      "policy_document": {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
               "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ],
            "Resource": [
                "*"
            ]
        }
    ]}},
    {
    "policy_name": "cloudwatch_metrics_policy",
      "policy_description": "cloudwatch metric policy",
      "policy_document": {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
               "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics"
           ],
            "Resource": [
                "*"
            ]
        }
    ]}}
    ]